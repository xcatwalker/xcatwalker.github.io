{"version":3,"sources":["AboutReact/Test/Test4Excel.js"],"names":["Test4Excel","props","onImportExcel","file","files","target","fileReader","FileReader","onload","event","result","workbook","XLSX","type","data","total","sheet","Sheets","hasOwnProperty","sheet_to_json","map","c","i","temp","arr","push","getWordCnt","dowithData","e","console","log","readAsBinaryString","state","obj","l","length","item","accept","onChange","this","React","Component"],"mappings":"oPAEMA,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAYVC,cAAgB,SAAAC,GAAQ,IAEZC,EAAUD,EAAKE,OAAfD,MAEFE,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAAC,GAChB,IAAK,IACOC,EAAWD,EAAMJ,OAAjBK,OAEFC,EAAWC,OAAUF,EAAQ,CAAEG,KAAM,WACvCC,EAAO,GAEPC,EAAQ,GACZ,IAAK,IAAMC,KAASL,EAASM,OACrBN,EAASM,OAAOC,eAAeF,KAG/BF,EAAOF,QAAWO,cAAcR,EAASM,OAAOD,IAChDD,EAAMC,GAASF,EAEfC,EAAMC,GAAOI,KAAI,SAACC,GACd,IAAI,IAAIC,KAAKD,EAAE,CACX,IAAIE,EAAOF,EAAEC,GACb,EAAKE,IAAIC,KAAKF,QAQ9B,EAAKG,WAAW,EAAKF,KAErB,EAAKG,WAAWZ,GAClB,MAAOa,GAGL,YADAC,QAAQC,IAAI,gDAKpBxB,EAAWyB,mBAAmB3B,EAAM,KApDpC,EAAK4B,MAAM,CACPlB,KAAK,IAGT,EAAKU,IAAM,GANG,E,qGAyDPA,GAEP,IADA,IAAIS,EAAM,GACFX,EAAG,EAAGY,EAAIV,EAAIW,OAAQb,EAAGY,EAAGZ,IAAI,CACpC,IAAIc,EAAOZ,EAAIF,GACfW,EAAIG,GAASH,EAAIG,GAAO,GAAO,EAGnC,OADAP,QAAQC,IAAI,QAAQG,GACbA,I,iCAGAlB,M,+BAKP,OACI,6BACI,2BAAOF,KAAK,OAAOwB,OAAO,cAAcC,SAAUC,KAAKrC,gBACvD,mC,GA5ESsC,IAAMC,WAmFhBzC","file":"static/js/5.ae4650cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as XLSX from 'xlsx';\r\nclass Test4Excel extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data:[]\r\n        }\r\n\r\n        this.arr = [];\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n\r\n    onImportExcel = file => {\r\n        // 获取上传的文件对象\r\n        const { files } = file.target;\r\n        // 通过FileReader对象读取文件\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = event => {\r\n            try {\r\n                const { result } = event.target;\r\n                // 以二进制流方式读取得到整份excel表格对象\r\n                const workbook = XLSX.read(result, { type: 'binary' });\r\n                let data = []; // 存储获取到的数据\r\n                // 遍历每张工作表进行读取（这里默认只读取第一张表）\r\n                let total = {};\r\n                for (const sheet in workbook.Sheets) {\r\n                    if (workbook.Sheets.hasOwnProperty(sheet)) {\r\n                        // 利用 sheet_to_json 方法将 excel 转成 json 数据\r\n                        // data = data.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n                        data = XLSX.utils.sheet_to_json(workbook.Sheets[sheet]);\r\n                        total[sheet] = data;\r\n\r\n                        total[sheet].map((c)=>{\r\n                            for(let i in c){\r\n                                let temp = c[i];\r\n                                this.arr.push(temp)\r\n                            }\r\n                        });\r\n\r\n\r\n                        // break; // 如果只取第一张表，就取消注释这行\r\n                    }\r\n                }\r\n                this.getWordCnt(this.arr)\r\n                // console.log(total);\r\n                this.dowithData(total)\r\n            } catch (e) {\r\n                // 这里可以抛出文件类型错误不正确的相关提示\r\n                console.log('文件类型不正确');\r\n                return;\r\n            }\r\n        };\r\n        // 以二进制方式打开文件\r\n        fileReader.readAsBinaryString(files[0]);\r\n    };\r\n\r\n    getWordCnt(arr){\r\n        var obj = {};\r\n        for(var i= 0, l = arr.length; i< l; i++){\r\n            var item = arr[i];\r\n            obj[item] = (obj[item] +1 ) || 1;\r\n        }\r\n        console.log('11111',obj)\r\n        return obj;\r\n    }\r\n\r\n    dowithData(total){\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div >\r\n                <input type='file' accept='.xlsx, .xls' onChange={this.onImportExcel} />\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test4Excel;\r\n"],"sourceRoot":""}