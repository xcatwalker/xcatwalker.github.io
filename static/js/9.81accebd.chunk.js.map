{"version":3,"sources":["AboutReact/Method/AboutUrl.js"],"names":["AboutUrl","props","React","Component"],"mappings":"+KAEMA,E,kDACF,WAAYC,GAAO,uCACTA,G,mGAQN,OACI,6BACI,6BAAM,8+D,GAZCC,IAAMC,WA2FdH","file":"static/js/9.81accebd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass AboutUrl extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    componentWillMount(){\r\n\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div >\r\n                <pre>{'const getValueFromUrlByKey = (key) => {\\n' +\r\n                '    let oGetVars = {};\\n' +\r\n                '    let href = decodeURIComponent(window.location.href);\\n' +\r\n                '\\n' +\r\n                '    let search = href.split(\"?\")[1];\\n' +\r\n                '\\n' +\r\n                '    if (search && search.length > 1) {\\n' +\r\n                '        for (let aItKey, nKeyId = 0, aCouples = search.split(\"&\"); nKeyId < aCouples.length; nKeyId++) {\\n' +\r\n                '            aItKey = aCouples[nKeyId].split(\"=\");\\n' +\r\n                '            oGetVars[decodeURIComponent(aItKey[0])] = aItKey.length > 1 ? decodeURIComponent(aItKey[1]) : \"\";\\n' +\r\n                '        }\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    return oGetVars[key];\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'const getValueFromState = (key) => {\\n' +\r\n                '    let state = getValueFromUrlByKey(\"state\");\\n' +\r\n                '\\n' +\r\n                '    if (!state) {\\n' +\r\n                '        return null\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    let params = {};\\n' +\r\n                '    state.split(\"|\").forEach((item) => {\\n' +\r\n                '        params[item.split(\":\")[0]] = item.split(\":\")[1];\\n' +\r\n                '    });\\n' +\r\n                '\\n' +\r\n                '    return params[key];\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'const jumpTo = (target, param) => {\\n' +\r\n                '    let state = \"\";\\n' +\r\n                '    let keys = Object.keys(param || {});\\n' +\r\n                '\\n' +\r\n                '    for (let i = 0; i < keys.length; i++) {\\n' +\r\n                '        let pKey = keys[i];\\n' +\r\n                '        if (param.hasOwnProperty(pKey) && param[pKey]) {\\n' +\r\n                '            if (i !== keys.length - 1) {\\n' +\r\n                '                state += pKey + \":\" + param[pKey] + \"%7C\";\\n' +\r\n                '            } else {\\n' +\r\n                '                state += pKey + \":\" + param[pKey];\\n' +\r\n                '            }\\n' +\r\n                '        }\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    sessionStorage.setItem(\"from\", window.location.pathname.split(\"/\").pop());\\n' +\r\n                '\\n' +\r\n                '    window.location.href = target + \"?state=\" + state;\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'const replaceTo = (target, param) => {\\n' +\r\n                '    let state = \"\";\\n' +\r\n                '    let keys = Object.keys(param);\\n' +\r\n                '\\n' +\r\n                '    for (let i = 0; i < keys.length; i++) {\\n' +\r\n                '        let pKey = keys[i];\\n' +\r\n                '        if (param.hasOwnProperty(pKey) && param[pKey]) {\\n' +\r\n                '            if (i !== keys.length - 1) {\\n' +\r\n                '                state += pKey + \":\" + param[pKey] + \"%7C\";\\n' +\r\n                '            } else {\\n' +\r\n                '                state += pKey + \":\" + param[pKey];\\n' +\r\n                '            }\\n' +\r\n                '        }\\n' +\r\n                '    }\\n' +\r\n                '\\n' +\r\n                '    window.location.replace(target + \"?state=\" + state);\\n' +\r\n                '};\\n' +\r\n                '\\n' +\r\n                'export default {\\n' +\r\n                '    getValueFromUrlByKey,\\n' +\r\n                '    getValueFromState,\\n' +\r\n                '    jumpTo,\\n' +\r\n                '    replaceTo,\\n' +\r\n                '}'}</pre>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutUrl;\r\n"],"sourceRoot":""}